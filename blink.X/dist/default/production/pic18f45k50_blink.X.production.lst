

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Sep 24 14:17:57 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15  0000                     
    16                           ; Version 2.36
    17                           ; Generated 28/01/2022 GMT
    18                           ; 
    19                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F45K50 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _TRISD	set	3989
    52  0000                     _TRISC	set	3988
    53  0000                     _TRISB	set	3987
    54  0000                     _LATC	set	3979
    55  0000                     _LATB	set	3978
    56  0000                     _LATAbits	set	3977
    57  0000                     _ANSELA	set	3931
    58  0000                     _ANSELB	set	3932
    59  0000                     _ANSELC	set	3933
    60  0000                     _ANSELD	set	3934
    61  0000                     _LATA	set	3977
    62  0000                     _LATD	set	3980
    63  0000                     _LATE	set	3981
    64  0000                     _OSCTUNE	set	3995
    65  0000                     _OSCCON2	set	4050
    66  0000                     _OSCCON	set	4051
    67  0000                     _INTCON2bits	set	4081
    68  0000                     _ACTCON	set	4021
    69  0000                     _TRISA	set	3986
    70  0000                     _TRISE	set	3990
    71  0000                     _WPUB	set	3973
    72  0000                     _ANSELE	set	3935
    73  0000                     _INTCONbits	set	4082
    74                           
    75                           ; #config settings
    76                           
    77                           	psect	cinit
    78  007F5A                     __pcinit:
    79                           	callstack 0
    80  007F5A                     start_initialization:
    81                           	callstack 0
    82  007F5A                     __initialization:
    83                           	callstack 0
    84  007F5A                     end_of_initialization:
    85                           	callstack 0
    86  007F5A                     __end_of__initialization:
    87                           	callstack 0
    88  007F5A  0100               	movlb	0
    89  007F5C  EFDE  F03F         	goto	_main	;jump to C main() function
    90                           
    91                           	psect	cstackCOMRAM
    92  000001                     __pcstackCOMRAM:
    93                           	callstack 0
    94  000001                     ??_main:
    95                           
    96                           ; 1 bytes @ 0x0
    97  000001                     	ds	2
    98                           
    99 ;;
   100 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   101 ;;
   102 ;; *************** function _main *****************
   103 ;; Defined at:
   104 ;;		line 49 in file "main.c"
   105 ;; Parameters:    Size  Location     Type
   106 ;;		None
   107 ;; Auto vars:     Size  Location     Type
   108 ;;		None
   109 ;; Return value:  Size  Location     Type
   110 ;;                  1    wreg      void 
   111 ;; Registers used:
   112 ;;		wreg, status,2, cstack
   113 ;; Tracked objects:
   114 ;;		On entry : 0/0
   115 ;;		On exit  : 0/0
   116 ;;		Unchanged: 0/0
   117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   118 ;;      Params:         0       0       0       0       0       0       0       0       0
   119 ;;      Locals:         0       0       0       0       0       0       0       0       0
   120 ;;      Temps:          2       0       0       0       0       0       0       0       0
   121 ;;      Totals:         2       0       0       0       0       0       0       0       0
   122 ;;Total ram usage:        2 bytes
   123 ;; Hardware stack levels required when called: 2
   124 ;; This function calls:
   125 ;;		_SYSTEM_Initialize
   126 ;; This function is called by:
   127 ;;		Startup code after reset
   128 ;; This function uses a non-reentrant model
   129 ;;
   130                           
   131                           	psect	text0
   132  007FBC                     __ptext0:
   133                           	callstack 0
   134  007FBC                     _main:
   135                           	callstack 29
   136  007FBC                     
   137                           ;main.c: 52:     SYSTEM_Initialize();
   138  007FBC  ECB0  F03F         	call	_SYSTEM_Initialize	;wreg free
   139  007FC0                     
   140                           ;main.c: 70:     TRISA = 0x0;
   141  007FC0  0E00               	movlw	0
   142  007FC2  6E92               	movwf	146,c	;volatile
   143  007FC4                     l772:
   144                           
   145                           ;main.c: 73:     {;main.c: 75:         LATAbits.LA4 = 0;
   146  007FC4  9889               	bcf	137,4,c	;volatile
   147  007FC6                     
   148                           ;main.c: 76:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   149  007FC6  0E1A               	movlw	26
   150  007FC8  6E02               	movwf	(??_main+1)^0,c
   151  007FCA  0E5E               	movlw	94
   152  007FCC  6E01               	movwf	??_main^0,c
   153  007FCE  0E6E               	movlw	110
   154  007FD0                     u17:
   155  007FD0  2EE8               	decfsz	wreg,f,c
   156  007FD2  D7FE               	bra	u17
   157  007FD4  2E01               	decfsz	??_main^0,f,c
   158  007FD6  D7FC               	bra	u17
   159  007FD8  2E02               	decfsz	(??_main+1)^0,f,c
   160  007FDA  D7FA               	bra	u17
   161  007FDC  D000               	nop2	
   162  007FDE                     
   163                           ;main.c: 77:         LATAbits.LA4 = 1;
   164  007FDE  8889               	bsf	137,4,c	;volatile
   165  007FE0                     
   166                           ;main.c: 78:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   167  007FE0  0E1A               	movlw	26
   168  007FE2  6E02               	movwf	(??_main+1)^0,c
   169  007FE4  0E5E               	movlw	94
   170  007FE6  6E01               	movwf	??_main^0,c
   171  007FE8  0E6E               	movlw	110
   172  007FEA                     u27:
   173  007FEA  2EE8               	decfsz	wreg,f,c
   174  007FEC  D7FE               	bra	u27
   175  007FEE  2E01               	decfsz	??_main^0,f,c
   176  007FF0  D7FC               	bra	u27
   177  007FF2  2E02               	decfsz	(??_main+1)^0,f,c
   178  007FF4  D7FA               	bra	u27
   179  007FF6  D000               	nop2	
   180  007FF8  EFE2  F03F         	goto	l772
   181  007FFC  EF00  F000         	goto	start
   182  008000                     __end_of_main:
   183                           	callstack 0
   184                           
   185 ;; *************** function _SYSTEM_Initialize *****************
   186 ;; Defined at:
   187 ;;		line 50 in file "mcc_generated_files/mcc.c"
   188 ;; Parameters:    Size  Location     Type
   189 ;;		None
   190 ;; Auto vars:     Size  Location     Type
   191 ;;		None
   192 ;; Return value:  Size  Location     Type
   193 ;;                  1    wreg      void 
   194 ;; Registers used:
   195 ;;		wreg, status,2, cstack
   196 ;; Tracked objects:
   197 ;;		On entry : 0/0
   198 ;;		On exit  : 0/0
   199 ;;		Unchanged: 0/0
   200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   201 ;;      Params:         0       0       0       0       0       0       0       0       0
   202 ;;      Locals:         0       0       0       0       0       0       0       0       0
   203 ;;      Temps:          0       0       0       0       0       0       0       0       0
   204 ;;      Totals:         0       0       0       0       0       0       0       0       0
   205 ;;Total ram usage:        0 bytes
   206 ;; Hardware stack levels used: 1
   207 ;; Hardware stack levels required when called: 1
   208 ;; This function calls:
   209 ;;		_OSCILLATOR_Initialize
   210 ;;		_PIN_MANAGER_Initialize
   211 ;; This function is called by:
   212 ;;		_main
   213 ;; This function uses a non-reentrant model
   214 ;;
   215                           
   216                           	psect	text1
   217  007F60                     __ptext1:
   218                           	callstack 0
   219  007F60                     _SYSTEM_Initialize:
   220                           	callstack 29
   221  007F60                     
   222                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   223  007F60  ECBE  F03F         	call	_PIN_MANAGER_Initialize	;wreg free
   224                           
   225                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   226  007F64  ECB5  F03F         	call	_OSCILLATOR_Initialize	;wreg free
   227  007F68  0012               	return		;funcret
   228  007F6A                     __end_of_SYSTEM_Initialize:
   229                           	callstack 0
   230                           
   231 ;; *************** function _PIN_MANAGER_Initialize *****************
   232 ;; Defined at:
   233 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;		None
   238 ;; Return value:  Size  Location     Type
   239 ;;                  1    wreg      void 
   240 ;; Registers used:
   241 ;;		wreg, status,2
   242 ;; Tracked objects:
   243 ;;		On entry : 0/0
   244 ;;		On exit  : 0/0
   245 ;;		Unchanged: 0/0
   246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   247 ;;      Params:         0       0       0       0       0       0       0       0       0
   248 ;;      Locals:         0       0       0       0       0       0       0       0       0
   249 ;;      Temps:          0       0       0       0       0       0       0       0       0
   250 ;;      Totals:         0       0       0       0       0       0       0       0       0
   251 ;;Total ram usage:        0 bytes
   252 ;; Hardware stack levels used: 1
   253 ;; This function calls:
   254 ;;		Nothing
   255 ;; This function is called by:
   256 ;;		_SYSTEM_Initialize
   257 ;; This function uses a non-reentrant model
   258 ;;
   259                           
   260                           	psect	text2
   261  007F7C                     __ptext2:
   262                           	callstack 0
   263  007F7C                     _PIN_MANAGER_Initialize:
   264                           	callstack 29
   265  007F7C                     
   266                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
   267  007F7C  0E00               	movlw	0
   268  007F7E  6E8D               	movwf	141,c	;volatile
   269                           
   270                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
   271  007F80  0E00               	movlw	0
   272  007F82  6E8C               	movwf	140,c	;volatile
   273                           
   274                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
   275  007F84  0E00               	movlw	0
   276  007F86  6E89               	movwf	137,c	;volatile
   277                           
   278                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
   279  007F88  0E00               	movlw	0
   280  007F8A  6E8A               	movwf	138,c	;volatile
   281                           
   282                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
   283  007F8C  0E00               	movlw	0
   284  007F8E  6E8B               	movwf	139,c	;volatile
   285                           
   286                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
   287  007F90  0E07               	movlw	7
   288  007F92  6E96               	movwf	150,c	;volatile
   289                           
   290                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xEF;
   291  007F94  0EEF               	movlw	239
   292  007F96  6E92               	movwf	146,c	;volatile
   293  007F98                     
   294                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
   295  007F98  6893               	setf	147,c	;volatile
   296                           
   297                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xC7;
   298  007F9A  0EC7               	movlw	199
   299  007F9C  6E94               	movwf	148,c	;volatile
   300  007F9E                     
   301                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
   302  007F9E  6895               	setf	149,c	;volatile
   303  007FA0                     
   304                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
   305  007FA0  010F               	movlb	15	; () banked
   306  007FA2  695E               	setf	94,b	;volatile
   307                           
   308                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC4;
   309  007FA4  0EC4               	movlw	196
   310  007FA6  6F5D               	movwf	93,b	;volatile
   311                           
   312                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3F;
   313  007FA8  0E3F               	movlw	63
   314  007FAA  6F5C               	movwf	92,b	;volatile
   315                           
   316                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
   317  007FAC  0E07               	movlw	7
   318  007FAE  6F5F               	movwf	95,b	;volatile
   319                           
   320                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x2F;
   321  007FB0  0E2F               	movlw	47
   322  007FB2  6F5B               	movwf	91,b	;volatile
   323                           
   324                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
   325  007FB4  0E00               	movlw	0
   326  007FB6  6E85               	movwf	133,c	;volatile
   327  007FB8                     
   328                           ; BSR set to: 15
   329                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 1;
   330  007FB8  8EF1               	bsf	241,7,c	;volatile
   331  007FBA                     
   332                           ; BSR set to: 15
   333  007FBA  0012               	return		;funcret
   334  007FBC                     __end_of_PIN_MANAGER_Initialize:
   335                           	callstack 0
   336                           
   337 ;; *************** function _OSCILLATOR_Initialize *****************
   338 ;; Defined at:
   339 ;;		line 57 in file "mcc_generated_files/mcc.c"
   340 ;; Parameters:    Size  Location     Type
   341 ;;		None
   342 ;; Auto vars:     Size  Location     Type
   343 ;;		None
   344 ;; Return value:  Size  Location     Type
   345 ;;                  1    wreg      void 
   346 ;; Registers used:
   347 ;;		wreg, status,2
   348 ;; Tracked objects:
   349 ;;		On entry : 0/0
   350 ;;		On exit  : 0/0
   351 ;;		Unchanged: 0/0
   352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   353 ;;      Params:         0       0       0       0       0       0       0       0       0
   354 ;;      Locals:         0       0       0       0       0       0       0       0       0
   355 ;;      Temps:          0       0       0       0       0       0       0       0       0
   356 ;;      Totals:         0       0       0       0       0       0       0       0       0
   357 ;;Total ram usage:        0 bytes
   358 ;; Hardware stack levels used: 1
   359 ;; This function calls:
   360 ;;		Nothing
   361 ;; This function is called by:
   362 ;;		_SYSTEM_Initialize
   363 ;; This function uses a non-reentrant model
   364 ;;
   365                           
   366                           	psect	text3
   367  007F6A                     __ptext3:
   368                           	callstack 0
   369  007F6A                     _OSCILLATOR_Initialize:
   370                           	callstack 29
   371  007F6A                     
   372                           ;mcc_generated_files/mcc.c: 60:     OSCCON = 0x10;
   373  007F6A  0E10               	movlw	16
   374  007F6C  6ED3               	movwf	211,c	;volatile
   375                           
   376                           ;mcc_generated_files/mcc.c: 62:     OSCCON2 = 0x00;
   377  007F6E  0E00               	movlw	0
   378  007F70  6ED2               	movwf	210,c	;volatile
   379                           
   380                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
   381  007F72  0E00               	movlw	0
   382  007F74  6E9B               	movwf	155,c	;volatile
   383                           
   384                           ;mcc_generated_files/mcc.c: 66:     ACTCON = 0x00;
   385  007F76  0E00               	movlw	0
   386  007F78  6EB5               	movwf	181,c	;volatile
   387  007F7A  0012               	return		;funcret
   388  007F7C                     __end_of_OSCILLATOR_Initialize:
   389                           	callstack 0
   390  0000                     
   391                           	psect	rparam
   392  0000                     
   393                           	psect	idloc
   394                           
   395                           ;Config register IDLOC0 @ 0x200000
   396                           ;	unspecified, using default values
   397  200000                     	org	2097152
   398  200000  FF                 	db	255
   399                           
   400                           ;Config register IDLOC1 @ 0x200001
   401                           ;	unspecified, using default values
   402  200001                     	org	2097153
   403  200001  FF                 	db	255
   404                           
   405                           ;Config register IDLOC2 @ 0x200002
   406                           ;	unspecified, using default values
   407  200002                     	org	2097154
   408  200002  FF                 	db	255
   409                           
   410                           ;Config register IDLOC3 @ 0x200003
   411                           ;	unspecified, using default values
   412  200003                     	org	2097155
   413  200003  FF                 	db	255
   414                           
   415                           ;Config register IDLOC4 @ 0x200004
   416                           ;	unspecified, using default values
   417  200004                     	org	2097156
   418  200004  FF                 	db	255
   419                           
   420                           ;Config register IDLOC5 @ 0x200005
   421                           ;	unspecified, using default values
   422  200005                     	org	2097157
   423  200005  FF                 	db	255
   424                           
   425                           ;Config register IDLOC6 @ 0x200006
   426                           ;	unspecified, using default values
   427  200006                     	org	2097158
   428  200006  FF                 	db	255
   429                           
   430                           ;Config register IDLOC7 @ 0x200007
   431                           ;	unspecified, using default values
   432  200007                     	org	2097159
   433  200007  FF                 	db	255
   434                           
   435                           	psect	config
   436                           
   437                           ;Config register CONFIG1L @ 0x300000
   438                           ;	PLL Selection
   439                           ;	PLLSEL = PLL4X, 4x clock multiplier
   440                           ;	PLL Enable Configuration bit
   441                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
   442                           ;	CPU System Clock Postscaler
   443                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
   444                           ;	Low Speed USB mode with 48 MHz system clock
   445                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
   446  300000                     	org	3145728
   447  300000  00                 	db	0
   448                           
   449                           ;Config register CONFIG1H @ 0x300001
   450                           ;	Oscillator Selection
   451                           ;	FOSC = HSM, HS oscillator, medium power 4MHz to 16MHz
   452                           ;	Primary Oscillator Shutdown
   453                           ;	PCLKEN = ON, Primary oscillator enabled
   454                           ;	Fail-Safe Clock Monitor
   455                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   456                           ;	Internal/External Oscillator Switchover
   457                           ;	IESO = OFF, Oscillator Switchover mode disabled
   458  300001                     	org	3145729
   459  300001  23                 	db	35
   460                           
   461                           ;Config register CONFIG2L @ 0x300002
   462                           ;	Power-up Timer Enable
   463                           ;	nPWRTEN = OFF, Power up timer disabled
   464                           ;	Brown-out Reset Enable
   465                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
   466                           ;	Brown-out Reset Voltage
   467                           ;	BORV = 190, BOR set to 1.9V nominal
   468                           ;	Low-Power Brown-out Reset
   469                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
   470  300002                     	org	3145730
   471  300002  5F                 	db	95
   472                           
   473                           ;Config register CONFIG2H @ 0x300003
   474                           ;	Watchdog Timer Enable bits
   475                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
   476                           ;	Watchdog Timer Postscaler
   477                           ;	WDTPS = 32768, 1:32768
   478  300003                     	org	3145731
   479  300003  3C                 	db	60
   480                           
   481                           ; Padding undefined space
   482  300004                     	org	3145732
   483  300004  FF                 	db	255
   484                           
   485                           ;Config register CONFIG3H @ 0x300005
   486                           ;	CCP2 MUX bit
   487                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
   488                           ;	PORTB A/D Enable bit
   489                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   490                           ;	Timer3 Clock Input MUX bit
   491                           ;	T3CMX = RC0, T3CKI function is on RC0
   492                           ;	SDO Output MUX bit
   493                           ;	SDOMX = RB3, SDO function is on RB3
   494                           ;	Master Clear Reset Pin Enable
   495                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
   496  300005                     	org	3145733
   497  300005  D3                 	db	211
   498                           
   499                           ;Config register CONFIG4L @ 0x300006
   500                           ;	Stack Full/Underflow Reset
   501                           ;	STVREN = ON, Stack full/underflow will cause Reset
   502                           ;	Single-Supply ICSP Enable bit
   503                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
   504                           ;	Dedicated In-Circuit Debug/Programming Port Enable
   505                           ;	ICPRT = OFF, ICPORT disabled
   506                           ;	Extended Instruction Set Enable bit
   507                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
   508                           ;	Background Debugger Enable bit
   509                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
   510  300006                     	org	3145734
   511  300006  85                 	db	133
   512                           
   513                           ; Padding undefined space
   514  300007                     	org	3145735
   515  300007  FF                 	db	255
   516                           
   517                           ;Config register CONFIG5L @ 0x300008
   518                           ;	Block 0 Code Protect
   519                           ;	CP0 = OFF, Block 0 is not code-protected
   520                           ;	Block 1 Code Protect
   521                           ;	CP1 = OFF, Block 1 is not code-protected
   522                           ;	Block 2 Code Protect
   523                           ;	CP2 = OFF, Block 2 is not code-protected
   524                           ;	Block 3 Code Protect
   525                           ;	CP3 = OFF, Block 3 is not code-protected
   526  300008                     	org	3145736
   527  300008  0F                 	db	15
   528                           
   529                           ;Config register CONFIG5H @ 0x300009
   530                           ;	Boot Block Code Protect
   531                           ;	CPB = OFF, Boot block is not code-protected
   532                           ;	Data EEPROM Code Protect
   533                           ;	CPD = OFF, Data EEPROM is not code-protected
   534  300009                     	org	3145737
   535  300009  C0                 	db	192
   536                           
   537                           ;Config register CONFIG6L @ 0x30000A
   538                           ;	Block 0 Write Protect
   539                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
   540                           ;	Block 1 Write Protect
   541                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
   542                           ;	Block 2 Write Protect
   543                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
   544                           ;	Block 3 Write Protect
   545                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
   546  30000A                     	org	3145738
   547  30000A  0F                 	db	15
   548                           
   549                           ;Config register CONFIG6H @ 0x30000B
   550                           ;	Configuration Registers Write Protect
   551                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   552                           ;	Boot Block Write Protect
   553                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
   554                           ;	Data EEPROM Write Protect
   555                           ;	WRTD = OFF, Data EEPROM is not write-protected
   556  30000B                     	org	3145739
   557  30000B  E0                 	db	224
   558                           
   559                           ;Config register CONFIG7L @ 0x30000C
   560                           ;	Block 0 Table Read Protect
   561                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
   562                           ;	Block 1 Table Read Protect
   563                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
   564                           ;	Block 2 Table Read Protect
   565                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
   566                           ;	Block 3 Table Read Protect
   567                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
   568  30000C                     	org	3145740
   569  30000C  0F                 	db	15
   570                           
   571                           ;Config register CONFIG7H @ 0x30000D
   572                           ;	Boot Block Table Read Protect
   573                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
   574  30000D                     	org	3145741
   575  30000D  40                 	db	64
   576                           tosu	equ	0xFFF
   577                           tosh	equ	0xFFE
   578                           tosl	equ	0xFFD
   579                           stkptr	equ	0xFFC
   580                           pclatu	equ	0xFFB
   581                           pclath	equ	0xFFA
   582                           pcl	equ	0xFF9
   583                           tblptru	equ	0xFF8
   584                           tblptrh	equ	0xFF7
   585                           tblptrl	equ	0xFF6
   586                           tablat	equ	0xFF5
   587                           prodh	equ	0xFF4
   588                           prodl	equ	0xFF3
   589                           indf0	equ	0xFEF
   590                           postinc0	equ	0xFEE
   591                           postdec0	equ	0xFED
   592                           preinc0	equ	0xFEC
   593                           plusw0	equ	0xFEB
   594                           fsr0h	equ	0xFEA
   595                           fsr0l	equ	0xFE9
   596                           wreg	equ	0xFE8
   597                           indf1	equ	0xFE7
   598                           postinc1	equ	0xFE6
   599                           postdec1	equ	0xFE5
   600                           preinc1	equ	0xFE4
   601                           plusw1	equ	0xFE3
   602                           fsr1h	equ	0xFE2
   603                           fsr1l	equ	0xFE1
   604                           bsr	equ	0xFE0
   605                           indf2	equ	0xFDF
   606                           postinc2	equ	0xFDE
   607                           postdec2	equ	0xFDD
   608                           preinc2	equ	0xFDC
   609                           plusw2	equ	0xFDB
   610                           fsr2h	equ	0xFDA
   611                           fsr2l	equ	0xFD9
   612                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       2
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      2       2       1        2.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRhl         1D      0       0      21        0.0%
BITBIGSFRlhh        1C      0       0      22        0.0%
BITBIGSFRlhl        19      0       0      23        0.0%
BITBIGSFRllhh        4      0       0      24        0.0%
BITBIGSFRllhll       4      0       0      25        0.0%
BITBIGSFRllllhh      3      0       0      26        0.0%
BITBIGSFRllllhl     25      0       0      27        0.0%
BITBIGSFRlllll       8      0       0      28        0.0%
ABS                  0      0       0      29        0.0%
BIGRAM             7FF      0       0      30        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Sep 24 14:17:57 2022

                            l15 7F68                              l18 7F7A                              l57 7FBA  
                            u17 7FD0                              u27 7FEA                             l760 7FB8  
                           l752 7F7C                             l762 7F6A                             l754 7F98  
                           l770 7FC0                             l756 7F9E                             l764 7F60  
                           l772 7FC4                             l758 7FA0                             l774 7FC6  
                           l776 7FDE                             l768 7FBC                             l778 7FE0  
                           wreg 000FE8                            _LATA 000F89                            _LATB 000F8A  
                          _LATC 000F8B                            _LATD 000F8C                            _LATE 000F8D  
                          _WPUB 000F85                            _main 7FBC                            start 0000  
                  ___param_bank 000000   __end_of_OSCILLATOR_Initialize 7F7C                           ?_main 0001  
                         _TRISA 000F92                           _TRISB 000F93                           _TRISC 000F94  
                         _TRISD 000F95                           _TRISE 000F96                 __initialization 7F5A  
                  __end_of_main 8000                          ??_main 0001                   __activetblptr 000000  
                        _ACTCON 000FB5                          _ANSELA 000F5B                          _ANSELB 000F5C  
                        _ANSELC 000F5D                          _ANSELD 000F5E                          _ANSELE 000F5F  
                        _OSCCON 000FD3                          isa$std 000001               _SYSTEM_Initialize 7F60  
                    __accesstop 0060         __end_of__initialization 7F5A              ?_SYSTEM_Initialize 0001  
                 ___rparam_used 000001                  __pcstackCOMRAM 0001             ??_SYSTEM_Initialize 0001  
     __end_of_SYSTEM_Initialize 7F6A                         _OSCCON2 000FD2                         _OSCTUNE 000F9B  
                       __Hparam 0000                         __Lparam 0000                         __pcinit 7F5A  
                       __ramtop 0800                         __ptext0 7FBC                         __ptext1 7F60  
                       __ptext2 7F7C                         __ptext3 7F6A           _OSCILLATOR_Initialize 7F6A  
      ??_PIN_MANAGER_Initialize 0001            end_of_initialization 7F5A          ?_OSCILLATOR_Initialize 0001  
           start_initialization 7F5A          _PIN_MANAGER_Initialize 7F7C                        _LATAbits 000F89  
                   _INTCON2bits 000FF1                        __Hrparam 0000                        __Lrparam 0000  
       ??_OSCILLATOR_Initialize 0001                        isa$xinst 000000                      _INTCONbits 000FF2  
       ?_PIN_MANAGER_Initialize 0001  __end_of_PIN_MANAGER_Initialize 7FBC  
